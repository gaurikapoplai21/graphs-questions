class Solution {
public:
    static int dfs(vector<vector<int>>& grid, int i,int j,int& area)
    {
        if(i>=0 && i<grid.size() && j>=0 && j<grid[0].size() && grid[i][j] == 1)
        {
            area += 1;
            grid[i][j] = 2;
            dfs(grid,i+1,j,area);
            dfs(grid,i-1,j,area);
            dfs(grid,i,j+1,area);
            dfs(grid,i,j-1,area);
        }
        return area;
    }
    int maxAreaOfIsland(vector<vector<int>>& grid)
    {
        int rows = grid.size();
        //int area = 0;
        int maxarea = 0;
        if(rows == 0)
        {
            return 0;
        }
        int cols = grid[0].size();
        for(int i=0;i<rows;i++)
        {
            for(int j=0;j<cols;j++)
            {
                if(grid[i][j] == 1)
                {
                    int area = 0;
                    area = dfs(grid,i,j,area);
                    if(area>maxarea)
                    {
                        maxarea = area;
                    }
                }
            }
        }
        return maxarea;
    }
};
