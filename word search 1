class Solution {
public:
    static bool dfs(vector<vector<char>>& board,int i,int j,int index,string word)
    {
        if(index == word.size())
        {
            return true;
        }
        if(i<0 || i>=board.size() || j<0 || j>=board[0].size() || board[i][j] != word[index])
        {
            return false;
        }
        char temp = board[i][j];
        board[i][j] = ' ';
        bool ans = (dfs(board,i+1,j,index+1,word) || dfs(board,i-1,j,index+1,word) || dfs(board,i,j+1,index+1,word) || dfs(board,i,j-1,index+1,word));
        //cout<<ans<<" ";
        board[i][j] = temp;
        return ans;
    }
        
    bool exist(vector<vector<char>>& board, string word) 
    {
        for(int i=0;i<board.size();i++)
        {
            for(int j=0;j<board[0].size();j++)
            {
                if(board[i][j] == word[0] && dfs(board,i,j,0,word) )
                {
                    return true;
                }
            }
        }
        return false;
    }
};
